// <auto-generated />
using System;
using BoardsProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoardsCTRL.Migrations
{
    [DbContext(typeof(BoardsContext))]
    [Migration("20241004152354_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoardsProject.Models.Board", b =>
                {
                    b.Property<int>("boardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("boardId"));

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("createdBoardBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdBoardDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("descriptionBoard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("editedBoardBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("editedBoardDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("statusBoard")
                        .HasColumnType("bit");

                    b.Property<string>("titleBoard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("boardId");

                    b.HasIndex("categoryId");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("BoardsProject.Models.Category", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("categoryId"));

                    b.Property<string>("createdCategoryBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdCategoryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("editedCaregoryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("editedCategoryBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("statusCategory")
                        .HasColumnType("bit");

                    b.Property<string>("titleCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BoardsProject.Models.Role", b =>
                {
                    b.Property<int>("roleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roleId"));

                    b.Property<string>("createdRoleBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdRoleDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("editedRoleBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("editedRoleDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("statusRole")
                        .HasColumnType("bit");

                    b.HasKey("roleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BoardsProject.Models.Slide", b =>
                {
                    b.Property<int>("slideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("slideId"));

                    b.Property<int>("boardId")
                        .HasColumnType("int");

                    b.Property<string>("createdSlideBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdSlideDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("editedSlideBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("editedSlideDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("statusSlide")
                        .HasColumnType("bit");

                    b.Property<int>("time")
                        .HasColumnType("int");

                    b.Property<string>("titleSlide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("slideId");

                    b.HasIndex("boardId");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("BoardsProject.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("createdUserBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdUserDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("editedUserBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("editedUserDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.Property<bool>("statusUser")
                        .HasColumnType("bit");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.HasIndex("roleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BoardsProject.Models.Board", b =>
                {
                    b.HasOne("BoardsProject.Models.Category", "Category")
                        .WithMany("Boards")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BoardsProject.Models.Slide", b =>
                {
                    b.HasOne("BoardsProject.Models.Board", "Board")
                        .WithMany("Slides")
                        .HasForeignKey("boardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("BoardsProject.Models.User", b =>
                {
                    b.HasOne("BoardsProject.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BoardsProject.Models.Board", b =>
                {
                    b.Navigation("Slides");
                });

            modelBuilder.Entity("BoardsProject.Models.Category", b =>
                {
                    b.Navigation("Boards");
                });

            modelBuilder.Entity("BoardsProject.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
